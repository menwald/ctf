// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.2
// source: mapapiv1.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEntireMapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MapName   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=map_name,json=mapName,proto3" json:"map_name,omitempty"`
}

func (x *GetEntireMapRequest) Reset() {
	*x = GetEntireMapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mapapiv1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntireMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntireMapRequest) ProtoMessage() {}

func (x *GetEntireMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mapapiv1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntireMapRequest.ProtoReflect.Descriptor instead.
func (*GetEntireMapRequest) Descriptor() ([]byte, []int) {
	return file_mapapiv1_proto_rawDescGZIP(), []int{0}
}

func (x *GetEntireMapRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GetEntireMapRequest) GetMapName() *wrapperspb.StringValue {
	if x != nil {
		return x.MapName
	}
	return nil
}

type GetEntireMapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetEntireMapResponse) Reset() {
	*x = GetEntireMapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mapapiv1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntireMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntireMapResponse) ProtoMessage() {}

func (x *GetEntireMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mapapiv1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntireMapResponse.ProtoReflect.Descriptor instead.
func (*GetEntireMapResponse) Descriptor() ([]byte, []int) {
	return file_mapapiv1_proto_rawDescGZIP(), []int{1}
}

func (x *GetEntireMapResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type CreateNewMapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MapName   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=map_name,json=mapName,proto3" json:"map_name,omitempty"`
	Width     uint32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height    uint32                  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	MaxTeams  uint32                  `protobuf:"varint,5,opt,name=max_teams,json=maxTeams,proto3" json:"max_teams,omitempty"`
}

func (x *CreateNewMapRequest) Reset() {
	*x = CreateNewMapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mapapiv1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewMapRequest) ProtoMessage() {}

func (x *CreateNewMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mapapiv1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewMapRequest.ProtoReflect.Descriptor instead.
func (*CreateNewMapRequest) Descriptor() ([]byte, []int) {
	return file_mapapiv1_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNewMapRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CreateNewMapRequest) GetMapName() *wrapperspb.StringValue {
	if x != nil {
		return x.MapName
	}
	return nil
}

func (x *CreateNewMapRequest) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CreateNewMapRequest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CreateNewMapRequest) GetMaxTeams() uint32 {
	if x != nil {
		return x.MaxTeams
	}
	return 0
}

type CreateNewMapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MapName   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=map_name,json=mapName,proto3" json:"map_name,omitempty"`
	Width     uint32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height    uint32                  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	TileGrid  []*MapRows              `protobuf:"bytes,5,rep,name=tile_grid,json=tileGrid,proto3" json:"tile_grid,omitempty"`
}

func (x *CreateNewMapResponse) Reset() {
	*x = CreateNewMapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mapapiv1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewMapResponse) ProtoMessage() {}

func (x *CreateNewMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mapapiv1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewMapResponse.ProtoReflect.Descriptor instead.
func (*CreateNewMapResponse) Descriptor() ([]byte, []int) {
	return file_mapapiv1_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNewMapResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CreateNewMapResponse) GetMapName() *wrapperspb.StringValue {
	if x != nil {
		return x.MapName
	}
	return nil
}

func (x *CreateNewMapResponse) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CreateNewMapResponse) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CreateNewMapResponse) GetTileGrid() []*MapRows {
	if x != nil {
		return x.TileGrid
	}
	return nil
}

type MapRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tile []*MapTile `protobuf:"bytes,1,rep,name=tile,proto3" json:"tile,omitempty"`
}

func (x *MapRows) Reset() {
	*x = MapRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mapapiv1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapRows) ProtoMessage() {}

func (x *MapRows) ProtoReflect() protoreflect.Message {
	mi := &file_mapapiv1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapRows.ProtoReflect.Descriptor instead.
func (*MapRows) Descriptor() ([]byte, []int) {
	return file_mapapiv1_proto_rawDescGZIP(), []int{4}
}

func (x *MapRows) GetTile() []*MapTile {
	if x != nil {
		return x.Tile
	}
	return nil
}

type Obstacle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Obstacle) Reset() {
	*x = Obstacle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mapapiv1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Obstacle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Obstacle) ProtoMessage() {}

func (x *Obstacle) ProtoReflect() protoreflect.Message {
	mi := &file_mapapiv1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Obstacle.ProtoReflect.Descriptor instead.
func (*Obstacle) Descriptor() ([]byte, []int) {
	return file_mapapiv1_proto_rawDescGZIP(), []int{5}
}

func (x *Obstacle) GetType() *wrapperspb.StringValue {
	if x != nil {
		return x.Type
	}
	return nil
}

type Terrain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Obstacles       []*Obstacle             `protobuf:"bytes,2,rep,name=obstacles,proto3" json:"obstacles,omitempty"`
	RunResistance   int32                   `protobuf:"varint,3,opt,name=run_resistance,json=runResistance,proto3" json:"run_resistance,omitempty"`
	ClimbResistance int32                   `protobuf:"varint,4,opt,name=climb_resistance,json=climbResistance,proto3" json:"climb_resistance,omitempty"`
	SwimResistance  int32                   `protobuf:"varint,5,opt,name=swim_resistance,json=swimResistance,proto3" json:"swim_resistance,omitempty"`
}

func (x *Terrain) Reset() {
	*x = Terrain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mapapiv1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terrain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terrain) ProtoMessage() {}

func (x *Terrain) ProtoReflect() protoreflect.Message {
	mi := &file_mapapiv1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terrain.ProtoReflect.Descriptor instead.
func (*Terrain) Descriptor() ([]byte, []int) {
	return file_mapapiv1_proto_rawDescGZIP(), []int{6}
}

func (x *Terrain) GetType() *wrapperspb.StringValue {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Terrain) GetObstacles() []*Obstacle {
	if x != nil {
		return x.Obstacles
	}
	return nil
}

func (x *Terrain) GetRunResistance() int32 {
	if x != nil {
		return x.RunResistance
	}
	return 0
}

func (x *Terrain) GetClimbResistance() int32 {
	if x != nil {
		return x.ClimbResistance
	}
	return 0
}

func (x *Terrain) GetSwimResistance() int32 {
	if x != nil {
		return x.SwimResistance
	}
	return 0
}

type MapTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X       uint32   `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y       uint32   `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Terrain *Terrain `protobuf:"bytes,3,opt,name=terrain,proto3" json:"terrain,omitempty"`
}

func (x *MapTile) Reset() {
	*x = MapTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mapapiv1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapTile) ProtoMessage() {}

func (x *MapTile) ProtoReflect() protoreflect.Message {
	mi := &file_mapapiv1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapTile.ProtoReflect.Descriptor instead.
func (*MapTile) Descriptor() ([]byte, []int) {
	return file_mapapiv1_proto_rawDescGZIP(), []int{7}
}

func (x *MapTile) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MapTile) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *MapTile) GetTerrain() *Terrain {
	if x != nil {
		return x.Terrain
	}
	return nil
}

var File_mapapiv1_proto protoreflect.FileDescriptor

var file_mapapiv1_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x61, 0x70, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x63, 0x74, 0x66, 0x2e, 0x6d, 0x61, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x88, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x72, 0x65, 0x4d, 0x61,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xd3, 0x01,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x37, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x54, 0x65,
	0x61, 0x6d, 0x73, 0x22, 0xec, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65,
	0x77, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x33, 0x0a,
	0x09, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x74, 0x66, 0x2e, 0x6d, 0x61, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x70, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x08, 0x74, 0x69, 0x6c, 0x65, 0x47, 0x72,
	0x69, 0x64, 0x22, 0x35, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x2a, 0x0a,
	0x04, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x74,
	0x66, 0x2e, 0x6d, 0x61, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x54,
	0x69, 0x6c, 0x65, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x22, 0x3c, 0x0a, 0x08, 0x4f, 0x62, 0x73,
	0x74, 0x61, 0x63, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x07, 0x54, 0x65, 0x72, 0x72,
	0x61, 0x69, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x74, 0x66, 0x2e, 0x6d,
	0x61, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c,
	0x65, 0x52, 0x09, 0x6f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x75, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x6d, 0x62, 0x5f, 0x72, 0x65, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63,
	0x6c, 0x69, 0x6d, 0x62, 0x52, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x77, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x77, 0x69, 0x6d, 0x52, 0x65, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x54, 0x69,
	0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x79, 0x12, 0x30,
	0x0a, 0x07, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x74, 0x66, 0x2e, 0x6d, 0x61, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x07, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e,
	0x32, 0xbe, 0x01, 0x0a, 0x06, 0x4d, 0x61, 0x70, 0x41, 0x50, 0x49, 0x12, 0x59, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x22, 0x2e, 0x63, 0x74,
	0x66, 0x2e, 0x6d, 0x61, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x63, 0x74, 0x66, 0x2e, 0x6d, 0x61, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x77, 0x4d, 0x61, 0x70, 0x12, 0x22, 0x2e, 0x63, 0x74, 0x66, 0x2e, 0x6d, 0x61, 0x70,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77,
	0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x74, 0x66,
	0x2e, 0x6d, 0x61, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x1e, 0x5a, 0x1c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x65, 0x6e, 0x77, 0x61, 0x6c, 0x64, 0x2f, 0x63, 0x74, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mapapiv1_proto_rawDescOnce sync.Once
	file_mapapiv1_proto_rawDescData = file_mapapiv1_proto_rawDesc
)

func file_mapapiv1_proto_rawDescGZIP() []byte {
	file_mapapiv1_proto_rawDescOnce.Do(func() {
		file_mapapiv1_proto_rawDescData = protoimpl.X.CompressGZIP(file_mapapiv1_proto_rawDescData)
	})
	return file_mapapiv1_proto_rawDescData
}

var file_mapapiv1_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_mapapiv1_proto_goTypes = []interface{}{
	(*GetEntireMapRequest)(nil),    // 0: ctf.mapapi.v1.GetEntireMapRequest
	(*GetEntireMapResponse)(nil),   // 1: ctf.mapapi.v1.GetEntireMapResponse
	(*CreateNewMapRequest)(nil),    // 2: ctf.mapapi.v1.CreateNewMapRequest
	(*CreateNewMapResponse)(nil),   // 3: ctf.mapapi.v1.CreateNewMapResponse
	(*MapRows)(nil),                // 4: ctf.mapapi.v1.MapRows
	(*Obstacle)(nil),               // 5: ctf.mapapi.v1.Obstacle
	(*Terrain)(nil),                // 6: ctf.mapapi.v1.Terrain
	(*MapTile)(nil),                // 7: ctf.mapapi.v1.MapTile
	(*timestamppb.Timestamp)(nil),  // 8: google.protobuf.Timestamp
	(*wrapperspb.StringValue)(nil), // 9: google.protobuf.StringValue
}
var file_mapapiv1_proto_depIdxs = []int32{
	8,  // 0: ctf.mapapi.v1.GetEntireMapRequest.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 1: ctf.mapapi.v1.GetEntireMapRequest.map_name:type_name -> google.protobuf.StringValue
	8,  // 2: ctf.mapapi.v1.GetEntireMapResponse.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 3: ctf.mapapi.v1.CreateNewMapRequest.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 4: ctf.mapapi.v1.CreateNewMapRequest.map_name:type_name -> google.protobuf.StringValue
	8,  // 5: ctf.mapapi.v1.CreateNewMapResponse.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 6: ctf.mapapi.v1.CreateNewMapResponse.map_name:type_name -> google.protobuf.StringValue
	4,  // 7: ctf.mapapi.v1.CreateNewMapResponse.tile_grid:type_name -> ctf.mapapi.v1.MapRows
	7,  // 8: ctf.mapapi.v1.MapRows.tile:type_name -> ctf.mapapi.v1.MapTile
	9,  // 9: ctf.mapapi.v1.Obstacle.type:type_name -> google.protobuf.StringValue
	9,  // 10: ctf.mapapi.v1.Terrain.type:type_name -> google.protobuf.StringValue
	5,  // 11: ctf.mapapi.v1.Terrain.obstacles:type_name -> ctf.mapapi.v1.Obstacle
	6,  // 12: ctf.mapapi.v1.MapTile.terrain:type_name -> ctf.mapapi.v1.Terrain
	0,  // 13: ctf.mapapi.v1.MapAPI.GetEntireMap:input_type -> ctf.mapapi.v1.GetEntireMapRequest
	2,  // 14: ctf.mapapi.v1.MapAPI.CreateNewMap:input_type -> ctf.mapapi.v1.CreateNewMapRequest
	1,  // 15: ctf.mapapi.v1.MapAPI.GetEntireMap:output_type -> ctf.mapapi.v1.GetEntireMapResponse
	3,  // 16: ctf.mapapi.v1.MapAPI.CreateNewMap:output_type -> ctf.mapapi.v1.CreateNewMapResponse
	15, // [15:17] is the sub-list for method output_type
	13, // [13:15] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_mapapiv1_proto_init() }
func file_mapapiv1_proto_init() {
	if File_mapapiv1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mapapiv1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntireMapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mapapiv1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntireMapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mapapiv1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewMapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mapapiv1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewMapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mapapiv1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mapapiv1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Obstacle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mapapiv1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terrain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mapapiv1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mapapiv1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mapapiv1_proto_goTypes,
		DependencyIndexes: file_mapapiv1_proto_depIdxs,
		MessageInfos:      file_mapapiv1_proto_msgTypes,
	}.Build()
	File_mapapiv1_proto = out.File
	file_mapapiv1_proto_rawDesc = nil
	file_mapapiv1_proto_goTypes = nil
	file_mapapiv1_proto_depIdxs = nil
}
